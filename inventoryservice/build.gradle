plugins {
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
}

group = 'com.madhurtoppo.microservices'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly('org.postgresql:postgresql')
    implementation('org.flywaydb:flyway-core')
    implementation('org.flywaydb:flyway-database-postgresql')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.6.0')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6')
    implementation('com.github.loki4j:loki-logback-appender:1.4.2')
    runtimeOnly('io.micrometer:micrometer-registry-prometheus')
    implementation('io.micrometer:micrometer-tracing-bridge-brave')
    implementation('io.zipkin.reporter2:zipkin-reporter-brave')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    developmentOnly('org.springframework.boot:spring-boot-docker-compose')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.rest-assured:rest-assured')
    testImplementation('org.springframework.boot:spring-boot-testcontainers')
    testImplementation('org.testcontainers:postgresql')
}

tasks.withType(Test) {
    useJUnitPlatform()
}
